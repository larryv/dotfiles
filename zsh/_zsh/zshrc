# Use the "emacs" ZLE keymap even if EDITOR is "vi" or "vim".
bindkey -e

# The %F prompt escape was introduced in zsh 4.3.7. Use the numbered
# form (e.g., %1F) so zsh uses termcap instead of ANSI sequences:
#   - https://sourceforge.net/p/zsh/code/ci/zsh-4.3.7/tree/Src/prompt.c
#   - https://mywiki.wooledge.org/BashFAQ/037
#   - https://wiki.bash-hackers.org/scripting/terminalcodes
autoload -Uz is-at-least
is-at-least 4.3.7 && zsh_has_prompt_F=yes

# TODO: If compatible with 4.3.6, move everything into a prompt theme.

# Left prompt: Hostname, history number, indication of last exit status,
# privileges/shell-nesting indicator.
PS1='[%m] %B%h%b '
if [[ -n $zsh_has_prompt_F ]]; then
    # Color the privileges/shell-nesting indicator green if the last
    # exit status was 0, red otherwise.
    PS1+='%(?.%2F.%1F)%B'${(r:$((SHLVL * 2))::%#:)}'%b%f '
else
    # Display the last exit status directly.
    PS1+='(%?) %B'${(r:$((SHLVL * 2))::%#:)}'%b '
fi

# Leave the -g in case I ever wrap this in a function again.
typeset -ag precmd_functions

# Right prompt: Current working directory (truncated to half screen
# width) and version control info.
function _precmd_rps_cwd {
    RPS1='%B%'$((COLUMNS / 2))'<..<%~%b'
}
precmd_functions+=_precmd_rps_cwd
autoload -Uz +X vcs_info 2>/dev/null && {
    function _precmd_rps_vcs {
        vcs_info && RPS1+=${vcs_info_msg_0_:+ ${vcs_info_msg_0_}}
    }
    precmd_functions+=_precmd_rps_vcs

    zstyle ':vcs_info:*' enable git hg svn

    zstyle ':vcs_info:*' formats '(%s:%b)'
    zstyle ':vcs_info:*' actionformats '(%s:%b|%a)'
    zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b/%r'

    zstyle ':vcs_info:git:*' check-for-changes true
    if [[ -n $zsh_has_prompt_F ]]; then
        # Color green/yellow/red if there are no/staged/unstaged changes.
        zstyle ':vcs_info:git:*' unstagedstr '%1F'
        zstyle ':vcs_info:git:*' stagedstr '%3F'
        zstyle ':vcs_info:git:*' formats '%2F%u%c(%s:%b)%f'
        zstyle ':vcs_info:git:*' actionformats '%2F%u%c(%s:%b|%a)%f'
    else
        zstyle ':vcs_info:git:*' unstagedstr ':U'
        zstyle ':vcs_info:git:*' stagedstr ':S'
        zstyle ':vcs_info:git:*' formats '(%s:%b%u%c)'
        zstyle ':vcs_info:git:*' actionformats '(%s:%b%u%c|%a)'
    fi
}

# Send current working directory to the terminal emulator.
autoload -Uz +X update_terminal_cwd 2>/dev/null \
    && precmd_functions+=update_terminal_cwd

# Enable completion and other things.
autoload -Uz run-help zargs zrecompile
autoload -Uz compinit && compinit -d $ZDOTDIR/zcompdump && {
    zstyle ':completion:*:descriptions' format '%B%d%b'
    if [[ -n $zsh_has_prompt_F ]]; then
        zstyle ':completion:*:warnings' format '%1F%BNo matches for %d%b%f'
    else
        zstyle ':completion:*:warnings' format '%BNo matches for %d%b'
    fi
}

# Enable fancy globbing; stop at slashes when moving wordwise.
setopt EXTENDED_GLOB
WORDCHARS=${WORDCHARS//[\/.]/}

# History.
SAVEHIST=1000000
HISTSIZE=$SAVEHIST
HISTFILE=$ZDOTDIR/zsh_history
setopt EXTENDED_HISTORY
# < 5.0.6: Let shells append their history at exit instead of incrementally.
setopt INC_APPEND_HISTORY_TIME 2>/dev/null

# Interactive functions.
function ls { command ls -AFh "$@" }

# Print timing stats for commands that use over 10 seconds of CPU time.
REPORTTIME=10

# Source application-specific "topic" scripts.
for script in $ZDOTDIR/zshrc.d/*.zsh(N-.); do
    . $script
done
unset script

unset zsh_has_prompt_F

# vim: set filetype=zsh:
