# zsh/_zsh/functions/emulated_eval
# --------------------------------
#
# SPDX-License-Identifier: CC0-1.0
#
# Written in 2022 by Lawrence Velazquez <vq@larryv.me>.
#
# To the extent possible under law, the author(s) have dedicated all
# copyright and related and neighboring rights to this software to the
# public domain worldwide.  This software is distributed without any
# warranty.
#
# You should have received a copy of the CC0 Public Domain Dedication
# along with this software.  If not, see
# <https://creativecommons.org/publicdomain/zero/1.0/>.


# Construct and evaluate a command in the given emulation mode.
#
#       emulated_eval [-R] <mode> [<arg> ...]
#
# The -R option and <mode> argument are passed to `emulate -L`, while
# the <arg> arguments are passed to `eval`.  The evaluated command is
# subject to the scope-related consequences of running in a function
# with LOCAL_OPTIONS, LOCAL_PATTERNS, and LOCAL_TRAPS enabled.
#
# This function makes an effort to restore the original emulation mode
# before returning, but in older zsh versions it always restores zsh
# mode because I don't know how to determine what the original mode was.
# If this is a problem, the caller can restore the correct mode itself:
#
#       emulate ksh
#       # do other things
#       emulated_eval sh '. foo.sh'
#       emulate ksh
#
# This function is fairly limited, as it prioritizes portability.
# Consider using `emulate ... -c` if targeting zsh 4.3.10 or later or
# `emulate -L` in an anonymous function for 4.3.7 or later.


# Older versions of `emulate` don't support this, and I don't
# know of an alternate way to get the current emulation mode.
# Quote the assignment RHS to protect against GLOB_ASSIGN.
local origmode
origmode="$(emulate 2>/dev/null)" || origmode=zsh

emulate -L zsh

{
    local minargc=1
    [[ $1 = -R ]] && minargc=2

    if (( ARGC < minargc )); then
        print >&2 'usage: emulated_eval [-R] <mode> [<arg> ...]'
        return 1
    fi

    emulate -L "${(@)argv[1,minargc]}"
    shift "$minargc"
    eval "$@"
} always {
    # https://www.zsh.org/mla/users/2008/msg00785.html (users/13169)
    # In zsh prior to 4.3.7, options are restored at function exit but
    # emulation mode is not.  Explicitly restore the original mode, or
    # things get weird later.  (A trap might be better for this, but I'm
    # not sure.)
    emulate -L "$origmode"
}


# vim: set filetype=zsh:
