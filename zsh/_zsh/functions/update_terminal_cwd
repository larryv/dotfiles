# zsh/_zsh/functions/update_terminal_cwd
# --------------------------------------
#
# Written in 2016, 2018-2021 by Lawrence Vel√°zquez <vq@larryv.me>.
#
# To the extent possible under law, the author(s) have dedicated all
# copyright and related and neighboring rights to this software to the
# public domain worldwide. This software is distributed without any
# warranty.
#
# You should have received a copy of the CC0 Public Domain Dedication
# along with this software. If not, see
# <http://creativecommons.org/publicdomain/zero/1.0/>.
#
# SPDX-License-Identifier: CC0-1.0


# Identify the current working directory to the terminal emulator. To use,
# register as a chpwd or precmd hook:
#
#     fpath=(/wherever/this/file/lives $fpath)
#
#     # With add-zsh-hook (requires zsh 4.3.4 or later).
#     autoload -Uz add-zsh-hook
#     add-zsh-hook -Uz chpwd update_terminal_cwd
#
#     # Without add-zsh-hook.
#     autoload -Uz update_terminal_cwd
#     typeset -ag chpwd_functions
#     chpwd_functions+=update_terminal_cwd
#
# Currently supports Apple's Terminal.app.


emulate -L zsh

[[ -z $INSIDE_EMACS ]] || return

# TODO: Accommodate other terminal emulators.
[[ $TERM_PROGRAM == Apple_Terminal
    || $TERM == (nsterm-*|nsterm|Apple_Terminal) ]] || return

# Process pathnames in a locale-agnostic manner.
setopt NO_MULTIBYTE

# Provide alternatives if HOST, LOGNAME, or PWD (which are set by zsh)
# are missing for some reason. (I don't know whether LOGNAME/logname(1)
# or USERNAME/id(1) is more appropriate for this.)
[[ -n $HOST ]] || local HOST=$(hostname)
[[ -n $LOGNAME ]] || local LOGNAME=$(logname)
[[ -n $PWD ]] || local PWD=${"$(pwd && echo x)"%??}

# Percent-encode the URI components, except for slashes in the path.
setopt EXTENDED_GLOB
local enchost=${HOST//(#m)?/%$(([##16] #MATCH))}
local encuser=${LOGNAME//(#m)?/%$(([##16] #MATCH))}
local encpath=${PWD//(#m)[^\/]/%$(([##16] #MATCH))}

# Assemble the OSC sequence from Terminal.app's General Preferences.
local uri=${encpath:+file://${enchost:+${encuser:+$encuser@}$enchost}$encpath}
local seq=$'\e]7;'${uri}$'\a'

# Modify the sequence so tmux passes it through
# (https://github.com/tmux/tmux/wiki/FAQ#what-is-the-passthrough-escape-sequence-and-how-do-i-use-it).
[[ -n $TMUX ]] && seq=$'\ePtmux;'${seq//$'\e'/$'\e\e'}$'\e\\'

# Print final sequence to the terminal emulator.
print -nr -- $seq


# See also
#   - /etc/bashrc and /etc/bashrc_Apple_Terminal on OS X / macOS
#   - https://timingapp.com/help/terminal


# vim: set filetype=zsh:
